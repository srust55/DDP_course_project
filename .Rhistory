scatterplotMatrix(~model1$residual+disp+hp+drat+wt|TransType, data=mtcars2,
main="Scatterplots by Transmission Type")
library(graphics)
par(mfrow=c(1,3))
boxplot(mpg ~  cyl*TransType, data=mtcars2, xlab="# of Cylinders",     ylab="MPG")
boxplot(mpg ~ gear*TransType, data=mtcars2, xlab="# of Forward Gears", ylab="MPG")
boxplot(mpg ~ carb*TransType, data=mtcars2, xlab="# of Carburetors",   ylab="MPG")
par(mfrow=c(1,3))
boxplot(mpg ~ TransType*cyl,  data=mtcars2, xlab="# of Cylinders",     ylab="MPG")
boxplot(mpg ~ TransType*gear, data=mtcars2, xlab="# of Forward Gears", ylab="MPG")
boxplot(mpg ~ TransType*carb, data=mtcars2, xlab="# of Carburetors",   ylab="MPG")
library(graphics)
par(mfrow=c(1,3))
boxplot(mpg ~ TransType*cyl,  data=mtcars2, xlab="# of Cylinders",     ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear, data=mtcars2, xlab="# of Forward Gears", ylab="MPG")
boxplot(mpg ~ TransType*carb, data=mtcars2, xlab="# of Carburetors",   ylab="MPG")
boxplot(mpg ~ TransType*cyl,  data=mtcars2, title="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear, data=mtcars2, xlab="# of Forward Gears", ylab="MPG")
boxplot(mpg ~ TransType*carb, data=mtcars2, xlab="# of Carburetors",   ylab="MPG")
boxplot(mpg ~ TransType*cyl,  data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear, data=mtcars2, xlab="# of Forward Gears", ylab="MPG")
boxplot(mpg ~ TransType*carb, data=mtcars2, xlab="# of Carburetors",   ylab="MPG")
par(mfrow=c(1,3))
boxplot(mpg ~ TransType*cyl,  data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear, data=mtcars2, main="MPG by TransType & # of Foward Gears",
ylab="MPG")
boxplot(mpg ~ TransType*carb, data=mtcars2, main="MPG by TransType & # of Carburetors",
ylab="MPG")
par(mfrow=c(1,3))
boxplot(mpg ~ TransType*cyl,  data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear, data=mtcars2, main="MPG by TransType & # of Foward Gears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb, data=mtcars2, main="MPG by TransType & # of Carburetors",
ylab="MPG", las=2)
mtcars2 <- mutate(mtcars, TransType = ifelse(mtcars$am==1, "Manual", "Auto  "),
CylConf = ifelse(mtcars$vs==1, "S", "V"))
library(graphics)
par(mfrow=c(1,4))
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of Foward Gears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carburetors",
ylab="MPG", las=2)
library(graphics)
par(mfrow=c(1,4))
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & Cylinder Configuration",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of Foward Gears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carburetors",
ylab="MPG", las=2)
library(graphics)
par(mfrow=c(1,4))
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & CylConf",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of Foward Gears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carburetors",
ylab="MPG", las=2)
library(graphics)
par(mfrow=c(1,4))
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & CylConf",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of ForwGears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carburetors",
ylab="MPG", las=2)
library(graphics)
par(mfrow=c(1,4))
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & CylConf",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of ForwGears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carbs",
ylab="MPG", las=2)
model1 <- lm(mpg ~ TransType * disp, data=mtcars2, resid=residual)
help(lm)
model1 <- lm(mpg ~ TransType * disp, data=mtcars2, residuals=residual)
model1 <- lm(mpg ~ TransType * disp, data=mtcars2, residuals=x)
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=TransType)) +
coord_trans(y="log10") +
facet_wrap(~cyl)
library(datasets)
library(ggplot2)
library(graphics)
library(plyr)
library(Rmisc)
data(mtcars)
mtcars2 <- mutate(mtcars, TransType = factor(ifelse(mtcars$am==1, "Manual", "Auto  ")),
CylConf = ifelse(mtcars$vs==1, "S", "V"))
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=TransType)) +
coord_trans(y="log10") +
facet_wrap(~cyl)
mtcars3 <- mutate(mtcars2, log10.mpg = log10(mpg), disp.sq = disp^2)
model1 <- lm(log10.mpg ~ disp + disp.sq, data=mtcars3)
summary(model1)
```{r}
model1 <- lm(mpg ~ disp + disp.sq, data=mtcars3)
summary(model1)
```
model1 <- lm(mpg ~ disp + disp.sq, data=mtcars2)
summary(model1)
mtcars3 <- mutate(mtcars2, disp.sq = disp^2)
model1 <- lm(mpg ~ disp + disp.sq, data=mtcars3)
summary(model1)
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(data=mtcars3, aes(color=TransType)) +
geom_smooth(data=mtcars3, method="lm", formula = mpg ~disp + disp.sq)
ggtitle("log10(MPG) vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(data=mtcars3, aes(color=TransType)) +
geom_smooth(data=mtcars3, method="lm", formula = mpg ~ disp + disp.sq) +
ggtitle("log10(MPG) vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
geom_smooth(data=mtcars3, method="lm", formula = mpg ~ disp + disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
geom_smooth(method="lm", formula = mpg ~ disp + disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
#      geom_smooth(method="lm", formula = mpg ~ disp + disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
geom_smooth(method="lm", formula = mpg ~ mtcars3$disp + disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
geom_smooth(method="lm", formula = mpg ~ mtcars3$disp + mtcars3$disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
geom_smooth(method="lm", formula = mtcars3$mpg ~ mtcars3$disp + mtcars3$disp.sq) +
ggtitle("MPG vs. EngDisp")
help("geom_smooth")
plot(mpg ~ disp, data=mtcars3)
lines(predict(model1))
plot(mpg ~ disp, data=mtcars3)
lines(predict(model1))
lines(predict(model1), color=blue)
lines(predict(model1), color=blue9)
lines(predict(model1), color=black)
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
stat_smooth(method="lm", formula = mtcars3$mpg ~ mtcars3$disp + mtcars3$disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
stat_smooth(method="lm", se=FALSE, formula = mtcars3$mpg ~ mtcars3$disp + mtcars3$disp.sq) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
stat_smooth(method="lm", formula = mtcars3$mpg ~ mtcars3$disp) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
stat_smooth(method="lm", formula = mpg ~ disp) +
ggtitle("MPG vs. EngDisp")
ggplot(data=mtcars3, aes(x=disp, y=mpg)) +
geom_point(aes(color=TransType)) +
stat_smooth(method="lm", formula = mtcars3$mpg ~ poly(mtcars3$disp,2)) +
ggtitle("MPG vs. EngDisp")
help("stat_smooth")
g <- ggplot(mtcars3, aes(x=disp, y=mpg))
g
g + stat_smooth(method="lm", formula = mpg ~ disp)
g + stat_smooth(method="lm", formula = mtcars3$mpg ~ mtcars3$disp)
plot(mpg ~ disp, data=mtcars3)
points(x = disp, y=predict(model))
points(x = disp, y=predict(model), data=mtcars3)
points(x = mtcars3disp, y=predict(model))
points(x = mtcars3$disp, y=predict(model))
model <- lm(mpg ~ disp)
plot(mpg ~ disp, data=mtcars3)
points(x = mtcars3$disp, y=predict(model))
model <- lm(mpg ~ disp, data=mtcars3)
plot(mpg ~ disp, data=mtcars3)
points(x = mtcars3$disp, y=predict(model))
model <- lm(mpg ~ disp + disp.sq, data=mtcars3)
plot(mpg ~ disp, data=mtcars3)
points(x = mtcars3$disp, y=predict(model))
model <- lm(mpg ~ disp + disp.sq, data=mtcars3)
plot(mpg ~ disp, data=mtcars3)
points(x = mtcars3$disp, y=predict(model), col="red")
mtcars3 <- mutate(mtcars2, disp.sq = disp^2, log10.mpg = log10(mpg))
model <- lm(log10.mpg ~ disp, data=mtcars3)
plot(mpg ~ disp, data=mtcars3)
points(x = mtcars3$disp, y=10^predict(model), col="red")
model <- lm(log10.mpg ~ disp + disp.sq, data=mtcars3)
plot(mpg ~ disp, data=mtcars3)
points(x = mtcars3$disp, y=10^predict(model), col="red")
model <- lm(log10.mpg ~ disp + disp.sq, data=mtcars3)
plot(mpg ~ disp, data=mtcars3)
lines(x = mtcars3$disp, y=10^predict(model), col="red")
mtcars4 <- mtcars3[order(disp),]
mtcars4 <- mtcars3[order(mtcars3$disp),]
mtcars4 <- mtcars3[order(mtcars3$disp),]
model <- lm(log10.mpg ~ disp + disp.sq, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
model <- lm(log10.mpg ~ disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
model <- lm(log10.mpg ~ CylConf * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
model <- lm(log10.mpg ~ cyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
mtcars4 <- mtcars3[order(mtcars3$cyl),]
model <- lm(log10.mpg ~ cyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model <- lm(log10.mpg ~ cyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
mtcars3 <- mutate(mtcars2, disp.sq = disp^2,
log10.mpg = log10(mpg),
numcyl = ifelse(cyl==4,"<=4",">=6"))
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model <- lm(log10.mpg ~ numcyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model <- lm(mpg ~ numcyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model <- lm(mpg ~ numcyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=10^predict(model), col="red")
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model <- lm(mpg ~ numcyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=predict(model), col="red")
mtcars4a <- mtcars4[numcyl=="<=4",]
mtcars4a <- mtcars4[mtcars4$numcyl=="<=4",]
mtcars4b <- mtcars4[mtcars4$numcyl==">=6",]
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model <- lm(mpg ~ numcyl * disp, data=mtcars4)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=predict(model), col="red")
mtcars4 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model1 <- lm(mpg ~ numcyl * disp, data=mtcars4)
summary(model1)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=predict(model1), col="red")
model2 <- lm(mpg ~ numcyl * disp + wt, data=mtcars4)
model2 <- lm(mpg ~ numcyl * disp + wt, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + drat, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + carb, data=mtcars4)
summary(model2)
resid1 <- resid(model1)
g1 <- ggplot(data=mtcars2, aes(x=disp, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("EngDispl")
g2 <- ggplot(data=mtcars2, aes(x=hp, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("Horsepower")
g3 <- ggplot(data=mtcars2, aes(x=drat, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("Rear Axle Ratio")
g4 <- ggplot(data=mtcars2, aes(x=wt, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("Vehicle Weight")
multiplot(g1, g2, g3, g4, cols=2)
par(mfrow=c(1,4))
boxplot(resid1 ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="resid1", las=2)
boxplot(resid1 ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & CylConf",
ylab="resid1", las=2)
boxplot(resid1 ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of ForwGears",
ylab="resid1", las=2)
boxplot(resid1 ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carbs",
ylab="resid1", las=2)
model1 <- lm(mpg ~ numcyl * disp, data=mtcars4)
summary(model1)
plot(mpg ~ disp, data=mtcars4)
lines(x = mtcars4$disp, y=predict(model1), col="red")
resid1 <- resid(model1)
g1 <- ggplot(data=mtcars2, aes(x=disp, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("EngDispl")
g2 <- ggplot(data=mtcars2, aes(x=hp, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("Horsepower")
g3 <- ggplot(data=mtcars2, aes(x=drat, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("Rear Axle Ratio")
g4 <- ggplot(data=mtcars2, aes(x=wt, y=resid1)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("Vehicle Weight")
multiplot(g1, g2, g3, g4, cols=2)
par(mfrow=c(1,4))
boxplot(resid1 ~ TransType*cyl,     data=mtcars2, main="MPG by TransType & # of Cylinders",
ylab="resid1", las=2)
boxplot(resid1 ~ TransType*CylConf, data=mtcars2, main="MPG by TransType & CylConf",
ylab="resid1", las=2)
boxplot(resid1 ~ TransType*gear,    data=mtcars2, main="MPG by TransType & # of ForwGears",
ylab="resid1", las=2)
boxplot(resid1 ~ TransType*carb,    data=mtcars2, main="MPG by TransType & # of Carbs",
ylab="resid1", las=2)
model2 <- lm(mpg ~ numcyl * disp + TransType, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + hp, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + drat, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + wt, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + cyl, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + CylConf, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + gear, data=mtcars4)
summary(model2)
model2 <- lm(mpg ~ numcyl * disp + carb, data=mtcars4)
summary(model2)
mtcarsA <- mtcars2[cyl==4,]
mtcarsB <- mtcars2[cyl==6 or cyl==8,]
modelA1 <- lm(mpg ~ disp, data=mtcarsA)
summary(modelA1)
modelB1 <- lm(mpg ~ disp, data=mtcarsB)
summary(modelB1)
mtcarsA <- mtcars2[mtcars2$cyl==4,]
mtcarsB <- mtcars2[mtcars2$cyl==6 or mtcars2$cyl==8,]
modelA1 <- lm(mpg ~ disp, data=mtcarsA)
summary(modelA1)
modelB1 <- lm(mpg ~ disp, data=mtcarsB)
summary(modelB1)
mtcarsA <- mtcars2[mtcars2$cyl==4,]
mtcarsB <- mtcars2[mtcars2$cyl==6 | mtcars2$cyl==8,]
modelA1 <- lm(mpg ~ disp, data=mtcarsA)
summary(modelA1)
modelB1 <- lm(mpg ~ disp, data=mtcarsB)
summary(modelB1)
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=TransType)) +
ggtitle("EngDispl")
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=cyl)) +
ggtitle("EngDispl")
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=factor(cyl)) +
ggtitle("EngDispl")
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=factor(cyl))) +
ggtitle("EngDispl")
ggplot(data=mtcars2, aes(x=disp, y=mpg)) +
geom_point(data=mtcars2, aes(color=factor(cyl))) +
ggtitle("EngDispl")
mtcars3 <- mutate(mtcars2, numcyl = ifelse(cyl==4,"<=4",">=6"))
mtcars3 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model1 <- lm(mpg ~ numcyl * disp, data=mtcars4)
summary(model1)
model2 <- lm(mpg ~ numcyl * disp + TransType, data=mtcars4)
summary(model2)
summary(model1)
mtcars3 <- mutate(mtcars2, numcyl = ifelse(cyl==4,"<=4",">=6"))
mtcars3 <- mtcars3[order(mtcars3$cyl,mtcars3$disp),]
model1 <- lm(mpg ~ numcyl * disp, data=mtcars4)
summary(model1)
numcyl <- c("<=4","<=4",">=6",">=6")
disp <- c(50,51,150,151)
newdata <-cbind(numcyl,disp)
predict(model1, newdata=newdata)
newdata <-data.frame(cbind(numcyl,disp))
predict(model1, newdata=newdata)
help(data.frame)
newdata <-data.frame(cbind(numcyl,disp), stringsAsFators=FALSE)
newdata <-data.frame(cbind(numcyl,disp), stringsAsFactors=FALSE)
newdata$numcyl <- c("<=4","<=4",">=6",">=6")
newdata$disp <- c(50,51,150,151)
predict(model1, newdata=newdata)
newdata$numcyl <- c("<=4","<=4",">=6",">=6")
newdata$disp <- c(50,150,150,250)
predict(model1, newdata=newdata)
c(p[2]-p[1],p[3]-p[4])
p <- predict(model1, newdata=newdata)
c(p[2]-p[1],p[3]-p[4])
c(p[2]-p[1],p[4]-p[3])
newdata$numcyl <- c("<=4","<=4",">=6",">=6")
newdata$disp <- c(50,150,150,250)
p <- predict(model1, newdata=newdata)
c(p[2]-p[1],p[4]-p[3])
newdata$numcyl <- c("<=4","<=4",">=6",">=6")
newdata$disp <- c(50,150,150,250)
p <- predict(model1, newdata=newdata)
p
c(p[2]-p[1],p[4]-p[3])
model2 <- lm(mpg ~ numcyl * disp + TransType, data=mtcars4)
summary(model2)
par(mfrow=c(1,2))
plot(model2, which=1)
plot(model2, which=2)
newdata <- data.frame("numcyl", "disp")
newdata$numcyl <- c("<=4","<=4",">=6",">=6")
newdata$disp <- c(50,150,150,250)
newdata$numcyl <- c("<=4","<=4",">=6",">=6")
newdata$disp <- c(50,150,150,250)
newdata <- dataframe(numcyl, disp)
newdata <- data.frame(numcyl, disp)
p <- predict(model1, newdata=newdata)
p
c(p[2]-p[1],p[4]-p[3])
newdata <- data.frame(numcyl, disp)
p <- predict(model1, newdata=newdata)
p
c(p[2]-p[1],p[4]-p[3])
disp <- c(50,150,150,250)
newdata <- data.frame(numcyl, disp)
p <- predict(model1, newdata=newdata)
p
c(p[2]-p[1],p[4]-p[3])
help("plot")
plot(mpg ~ disp, data=mtcars3, main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, type="cyl",
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, pch="cyl",
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, pch=c(4,6,8)[cyl],
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, group=cyl,
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, group=cyl, col=c(color(col.list))
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, col=c(color(col.list)),
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, col=c(colour(col.list)),
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, col=c(colour(col.list)),
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
plot(mpg ~ disp, data=mtcars3, col=col.list,
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
col.list <- rep(0, length(mtcars3$cyl))
col.list[mtcars3$cyl==4] <- 1
col.list[mtcars3$cyl==6] <- 2
col.list[mtcars3$cyl==8] <- 3
plot(mpg ~ disp, data=mtcars3, col=col.list,
main="MPG vs. Engine Displacement with Predicted Values")
lines(x = mtcars3$disp, y=predict(model1), col="red")
model1$coefficients
model1$effects
model1$terms
model1$Coefficients
coef(model1)
coef(summary(model1))
model1$r.squared
summary(model1)$r.squared
print("R-Squared is",summary(model1)$r.squared)
print("R-Squared is", summary(model1)$r.squared)
help(print)
summary(model2)$coefficients
layout(matrix(c(1,2,3,4),1,4), heights=1)
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="# of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="Cyl Config",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="Forward Gears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="# of Carbs",
ylab="MPG", las=2)
layout(matrix(c(1,2,3,4),1,4), heights=0.5)
boxplot(mpg ~ TransType*cyl,     data=mtcars2, main="# of Cylinders",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*CylConf, data=mtcars2, main="Cyl Config",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*gear,    data=mtcars2, main="Forward Gears",
ylab="MPG", las=2)
boxplot(mpg ~ TransType*carb,    data=mtcars2, main="# of Carbs",
ylab="MPG", las=2)
help(fig.height)
??fig.height
shiny::runApp('My Folders/Coursera/Data Science/Developing Data Products/CP')
help(numericInput)
shiny::runApp('My Folders/Coursera/Data Science/Developing Data Products/CP')
runApp()
setwd("C:/Users/Steve/Documents/My Folders/Coursera/Data Science/Developing Data Products/CP")
runApp()
